
Перем Токены;
Перем Исходник;
Перем ТаблицаТокенов;

Перем Результат;

Перем мОтступыЭтойСтроки;
Перем мОтступыСледующейСтроки;
Перем мЭтаСтрока;
Перем мСтекДополнительныхОтступов;
Перем мОтступ;
Перем мПустыеСтрокиСОтступами;
Перем мШаблоны;

Процедура Открыть(Парсер, Параметры) Экспорт
	
	Токены = Парсер.Токены();
	Исходник = Парсер.Исходник();
	ТаблицаТокенов = Парсер.ТаблицаТокенов();
	КлючевыеСлова = Парсер.КлючевыеСлова();
	Результат.Очистить();
	
	СоздатьШаблоны();
	
КонецПроцедуры // Открыть()

Функция Закрыть() Экспорт
	
	КоличествоТокенов = ТаблицаТокенов.Количество()-1;
	КоличествоСтрок = ТаблицаТокенов[ТаблицаТокенов.Количество()-2].НомерСтроки;
	Индекс = 1;
	НачалоСтроки = 1;
	КонецСтроки = 1;
	НомерСтроки = 1;
	Позиция = 1;
	
	КлючСовпадений = новый Структура("Ключ,ИндексШаблона", Неопределено, Неопределено);
	МассивНачалИКонцовСтрок = новый Массив();
	
	РезультатПоиска = новый Массив();
	
	Пока Индекс < КоличествоТокенов Цикл
		
		НачалоСтроки = Индекс;
		
		Пока Индекс < КоличествоТокенов
			И ТаблицаТокенов[Индекс].НомерСтроки <= НомерСтроки Цикл
			
			//Токены внутри строки
			КонецСтроки = Индекс;
			Индекс = Индекс + 1;			
			
		КонецЦикла;
		
		Если НачалоСтроки < КонецСтроки Тогда
			
			Рез = ПроверитьНаШаблон(НачалоСтроки, КонецСтроки);

			Если КлючСовпадений.Ключ <> Рез.Ключ Тогда
				
				Если МассивНачалИКонцовСтрок.Количество()>1 Тогда
					
					Стр = Новый Структура();
					Стр.Вставить("Ключ", КлючСовпадений.Ключ);
					Стр.Вставить("ИндексШаблона", КлючСовпадений.ИндексШаблона);
					Стр.Вставить("МассивНачалИКонцовСтрок", Новый ФиксированныйМассив(МассивНачалИКонцовСтрок));
					
					РезультатПоиска.Добавить(Стр);
					
				КонецЕсли;
				
				МассивНачалИКонцовСтрок.Очистить();
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(КлючСовпадений, Рез);
			Если Рез.Ключ <> Неопределено Тогда
				МассивНачалИКонцовСтрок.Добавить(новый Структура("НачалоСтроки,КонецСтроки", НачалоСтроки, КонецСтроки));
			КонецЕсли;
			
		КонецЕсли;			
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Если МассивНачалИКонцовСтрок.Количество()>1 Тогда
		
		Стр = Новый Структура();
		Стр.Вставить("Ключ", КлючСовпадений.Ключ);
		Стр.Вставить("ИндексШаблона", КлючСовпадений.ИндексШаблона);
		Стр.Вставить("МассивНачалИКонцовСтрок", Новый ФиксированныйМассив(МассивНачалИКонцовСтрок));
		
		РезультатПоиска.Добавить(Стр);
	КонецЕсли;


	СтрокаИзПробелов = "                                                     ";
	ТекстРезультат = Исходник;
		
	// Обход результатов поиска с конца. 
	// Тогда не нужно запоминать количество добавленых символов и формулы
	// становятся проще
	ц = РезультатПоиска.Количество()-1;
	Пока ц >= 0 Цикл
		
		Эл = РезультатПоиска[ц];
		
		МаксПозицияВСтроке = 0;
		Для каждого НачалоИКонец ИЗ Эл.МассивНачалИКонцовСтрок Цикл
			
			ПозицияВСтроке = ТаблицаТокенов[НачалоИКонец.НачалоСтроки + мШаблоны[Эл.ИндексШаблона].Шаблон.Количество()-1].Позиция 
				- ТаблицаТокенов[НачалоИКонец.НачалоСтроки].Позиция;
			
			Если ПозицияВСтроке > МаксПозицияВСтроке Тогда
				
				МаксПозицияВСтроке = ПозицияВСтроке;
				
			КонецЕсли;
			
		КонецЦикла;
		
		цц = Эл.МассивНачалИКонцовСтрок.Количество()-1;
		Пока цц >= 0 Цикл
			
			НачалоИКонец = Эл.МассивНачалИКонцовСтрок[цц];
			ПоследнийТокен = ТаблицаТокенов[НачалоИКонец.НачалоСтроки + мШаблоны[Эл.ИндексШаблона].Шаблон.Количество()-1];
			
			ПозицияВСтроке = ПоследнийТокен.Позиция 
				- ТаблицаТокенов[НачалоИКонец.НачалоСтроки].Позиция;
				
			ПозицияДляВставкиОтступов = ПоследнийТокен.Позиция; 
			Если мШаблоны[Эл.ИндексШаблона].ПереносПоследнегоТокена Тогда				
				ПозицияДляВставкиОтступов = ПозицияДляВставкиОтступов - ПоследнийТокен.Длина;				
			КонецЕсли;
				
			ТекстРезультат = Лев(ТекстРезультат, ПозицияДляВставкиОтступов) 
				+ Лев(СтрокаИзПробелов, МаксПозицияВСтроке - ПозицияВСтроке)
				+ Прав(ТекстРезультат, СтрДлина(ТекстРезультат) - ПозицияДляВставкиОтступов); 
				
			цц = цц - 1;
			
		КонецЦикла;
		
		ц = ц - 1;
		
	КонецЦикла;
		
	Возврат ТекстРезультат;
	
КонецФункции // Закрыть()

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Возврат Подписки;
КонецФункции // Подписки() 

Функция ПроверитьНаШаблон(НачалоСтроки, КонецСтроки)

	Для ИндексШаблона = 0 По мШаблоны.Количество()-1 Цикл
		
		Шаблон = мШаблоны[ИндексШаблона];
		
		КлючСтроки = новый Массив();
		ц = 0;
		КоличествоСтрокИдентификаторов = 0;
		
		СовпадаетСШаблоном = Истина;
		
		Пока ц < Шаблон.Шаблон.Количество()
			И ц + НачалоСтроки < КонецСтроки Цикл
			
			Токен = ТаблицаТокенов[ц + НачалоСтроки];
			Если Токен.Токен <> Шаблон.Шаблон[ц] Тогда
				СовпадаетСШаблоном = Ложь;
				Прервать;
			КонецЕсли;
			
			Если Токен.Токен = "Идентификатор" Или Токен.Токен = "Строка" Тогда
				
				Если КоличествоСтрокИдентификаторов < Шаблон.КоличествоСтрокИдентификаторов-1 Тогда
					КлючСтроки.Добавить("""" + Сред(Исходник, Токен.Позиция, Токен.Длина) + """");
				Иначе
					КлючСтроки.Добавить("*");
				КонецЕсли;
				КоличествоСтрокИдентификаторов = КоличествоСтрокИдентификаторов + 1;
				
			Иначе
				
				КлючСтроки.Добавить(Токен.Токен);
				
			КонецЕсли;
			
			ц = ц + 1;
			
		КонецЦикла;
		
		Если СовпадаетСШаблоном И ц = Шаблон.Шаблон.Количество() Тогда
			
			Рез = новый Структура();
			Рез.Вставить("Ключ", СтрСоединить(КлючСтроки,","));
			Рез.Вставить("ИндексШаблона", ИндексШаблона);
			
			Возврат Рез;
			
		КонецЕсли;
		
	КонецЦикла;		
	
	Возврат новый Структура("Ключ", Неопределено);
	
КонецФункции

Процедура СоздатьШаблоны()
	
	мШаблоны.Очистить();
	
	// Стр.Эл =
	Шаблон = новый Массив();
	Шаблон.Добавить("Идентификатор");
	Шаблон.Добавить("Точка");
	Шаблон.Добавить("Идентификатор");
	Шаблон.Добавить("ЗнакРавно");
	
	мШаблоны.Добавить(новый Структура("Шаблон,ПереносПоследнегоТокена,КоличествоСтрокИдентификаторов", Шаблон, Истина,2));
	
	// Стр.Вставить("",
	Шаблон = новый Массив();
	Шаблон.Добавить("Идентификатор");
	Шаблон.Добавить("Точка");
	Шаблон.Добавить("Идентификатор");
	Шаблон.Добавить("ЛеваяКруглаяСкобка");
	Шаблон.Добавить("Строка");
	Шаблон.Добавить("Запятая");
	
	мШаблоны.Добавить(новый Структура("Шаблон,ПереносПоследнегоТокена,КоличествоСтрокИдентификаторов", Шаблон, Ложь, 3));	
	
КонецПроцедуры

Результат = новый Массив();
мШаблоны = новый Массив();
