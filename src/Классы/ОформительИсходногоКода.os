
Перем мНастройкиПлагинов;

#Область ПрограммныйИнтерфейс

Функция Оформить(Исходник) Экспорт
	
	Парсер = Новый ПарсерВстроенногоЯзыка;
	Плагины = Новый Массив();
	ПараметрыПлагинов = Новый Соответствие();
	
	НазванияПлагинов = Новый Массив();
	НазванияПлагинов.Добавить("ОформительОтступов");
	НазванияПлагинов.Добавить("ОформительПробелов");
	НазванияПлагинов.Добавить("ЗаменаНеканоничныхКлючевыхСлов");
	
	Для Каждого НазваниеПлагина Из НазванияПлагинов Цикл
		Если мНастройкиПлагинов[НазваниеПлагина].Включен Тогда
			
			Плагин = ФабрикаПлагинов(НазваниеПлагина);
			
			Плагины.Добавить(Плагин);
			ПараметрыПлагина = Новый Структура();
			Для Каждого КлючИЗначение Из мНастройкиПлагинов[НазваниеПлагина] Цикл
				ПараметрыПлагина.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЦикла;
			
			ПараметрыПлагинов[Плагин] = ПараметрыПлагина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Парсер.Пуск(Исходник, Плагины, ПараметрыПлагинов);
	
	ИсправленныйИсходник = Парсер.ВыполнитьЗамены();
	Если ИсправленныйИсходник = Неопределено Тогда
		
		ИсправленныйИсходник = Исходник;
		
	КонецЕсли;
	
	Если мНастройкиПлагинов["ВыравниваниеАргументов"].Включен Тогда
		
		// Использование данного плагина требует заново распарсить код
		Плагины = Новый Массив();
		ПлагинВыравниваниеАргументов = Новый ВыравниваниеАргументов;
		Плагины.Добавить(ПлагинВыравниваниеАргументов);
		ПараметрыПлагинов = Новый Соответствие();
		ПараметрыПлагина = Новый Структура("КоличествоСтрокПодряд");
		Для Каждого КлючИЗначение Из мНастройкиПлагинов["ВыравниваниеАргументов"] Цикл
			ПараметрыПлагина.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;		
		ПараметрыПлагинов[ПлагинВыравниваниеАргументов] = мНастройкиПлагинов.ВыравниваниеАргументов;
		
		Парсер.Пуск(ИсправленныйИсходник, Плагины, ПараметрыПлагинов);
		ИсправленныйИсходник2 = Парсер.ВыполнитьЗамены();
		Если ИсправленныйИсходник2 <> Неопределено Тогда
			
			ИсправленныйИсходник = ИсправленныйИсходник2;
			ИсправленныйИсходник2 = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ИсправленныйИсходник;

КонецФункции

Процедура ПрочитатьНастройкиИзФайла(ИмяФайла) Экспорт

	Чтение = Новый ЧтениеJSON();
	Чтение.ОткрытьФайл(ИмяФайла, КодировкаТекста.UTF8);

	мНастройкиПлагинов = ПрочитатьJSON(Чтение).НастройкиПлагинов;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

Функция ФабрикаПлагинов(НазваниеПлагина)

	Если НазваниеПлагина = "ОформительОтступов" Тогда
		Плагин = Новый ОформительОтступов();
	ИначеЕсли НазваниеПлагина = "ОформительПробелов" Тогда
		Плагин = Новый ОформительПробелов();
	ИначеЕсли НазваниеПлагина = "ЗаменаНеканоничныхКлючевыхСлов" Тогда
		Плагин = Новый ЗаменаНеканоничныхКлючевыхСлов();
	Иначе
		ВызватьИсключение("Неправильный плагин");
	КонецЕсли;

	Возврат Плагин;

КонецФункции

#КонецОбласти
