
Перем Токены;
Перем Исходник;
Перем ТаблицаТокенов;

Перем Результат;

Перем мОтступыЭтойСтроки;
Перем мОтступыСледующейСтроки;
Перем мЭтаСтрока;
Перем мСтекДополнительныхОтступов;
Перем мОтступ;
Перем мПустыеСтрокиСОтступами;

Процедура Открыть(Парсер, Параметры) Экспорт
	Токены = Парсер.Токены();
	Исходник = Парсер.Исходник();
	ТаблицаТокенов = Парсер.ТаблицаТокенов();
	КлючевыеСлова = Парсер.КлючевыеСлова();
	Результат.Очистить();
	
	
КонецПроцедуры // Открыть()

Функция Закрыть() Экспорт
	
	ОтступСтрока = Строка(Символы.Таб);
	
	ОперацииПередКоторымиНеСтавимПробел = новый Структура();
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ЛеваяКруглаяСкобка");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ПраваяКруглаяСкобка");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ЛеваяКвадратнаяСкобка");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ПраваяКвадратнаяСкобка");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ЗнакВопроса");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("Запятая");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("Точка");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("Двоеточие");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ТочкаСЗапятой");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ПродолжениеСтроки");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ОкончаниеСтроки");
 	ОперацииПередКоторымиНеСтавимПробел.Вставить("ЗнакУмножения");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ЗнакДеления");
	ОперацииПередКоторымиНеСтавимПробел.Вставить("ЗнакОстатка");
	
	ОперацииПослеКоторыйНеСтавимПробел = новый Структура();
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ЛеваяКруглаяСкобка");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ЛеваяКвадратнаяСкобка");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ЗнакВопроса");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("Точка");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ТочкаСЗапятой");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ПродолжениеСтроки");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ОкончаниеСтроки");
	
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ЗнакУмножения");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ЗнакДеления");
	ОперацииПослеКоторыйНеСтавимПробел.Вставить("ЗнакОстатка");
	
	КоличествоТокенов = ТаблицаТокенов.Количество();
	
	ТокеныСтавимОтступ = новый Структура();
	//ЗакрывающаяСкобка
	ТокеныСтавимОтступ.Вставить("Тогда");
	ТокеныСтавимОтступ.Вставить("Иначе");
	ТокеныСтавимОтступ.Вставить("Попытка");
	ТокеныСтавимОтступ.Вставить("Исключение");
	ТокеныСтавимОтступ.Вставить("Цикл");
    
	
	ТокеныУбираемОтступ = новый Структура();
	ТокеныУбираемОтступ.Вставить("КонецФункции");
	ТокеныУбираемОтступ.Вставить("КонецПроцедуры");
	ТокеныУбираемОтступ.Вставить("Иначе");
	ТокеныУбираемОтступ.Вставить("ИначеЕсли");
	ТокеныУбираемОтступ.Вставить("КонецЕсли");
	ТокеныУбираемОтступ.Вставить("Исключение");
	ТокеныУбираемОтступ.Вставить("КонецПопытки");
	ТокеныУбираемОтступ.Вставить("КонецЦикла");

	БлокиДополнительногоОтступа = новый Соответствие();
	БлокиДополнительногоОтступа.Вставить("Если", "Тогда");
	БлокиДополнительногоОтступа.Вставить("Пока", "Цикл");
	БлокиДополнительногоОтступа.Вставить("Для", "Цикл");
	БлокиДополнительногоОтступа.Вставить("ЛеваяКруглаяСкобка", "ПраваяКруглаяСкобка");
	БлокиДополнительногоОтступа.Вставить("ЛеваяКвадратнаяСкобка", "ПраваяКвадратнаяСкобка");
	БлокиДополнительногоОтступа.Вставить("Возврат", "ТочкаСЗапятой");
	// Или Идентификатор + ЛеваяКруглаяСкобка == ПраваяКруглаяСкобка
	
	Индекс = 1;
	
	мОтступыЭтойСтроки = 0;
	мОтступыСледующейСтроки = 0;
	мЭтаСтрока = "";	
	мСтекДополнительныхОтступов = новый Массив();
	мОтступ = Строка(Символы.Таб);
	
	СпБлоков = новый Массив();
	Для Индекс = 1 По КоличествоТокенов-1 Цикл   
		
		Токен = ТаблицаТокенов[Индекс];
		Если Индекс>1 Тогда
			
			Для ц = 1 По Токен.НомерСтроки - ТаблицаТокенов[Индекс-1].НомерСтроки Цикл
				
				ДобавитьВРезультат();
				
				СтрокаДляДобавления = "";
				Если мСтекДополнительныхОтступов.Количество() > 0 Тогда
					мЭтаСтрока = СтрокаДляДобавления + Строка(Символы.Таб);
				КонецЕсли;
				мЭтаСтрока = СтрокаДляДобавления + мЭтаСтрока;
				
			КонецЦикла;		
			
		КонецЕсли;
		
		Если Токен.Токен = "Комментарий" Тогда
			мЭтаСтрока = мЭтаСтрока + "//";
		КонецЕсли;
		
		мЭтаСтрока = мЭтаСтрока + Сред(Исходник, Токен.Позиция, Токен.Длина);
		Если НЕ (ОперацииПослеКоторыйНеСтавимПробел.Свойство(Токен.Токен)
			ИЛИ (Индекс < КоличествоТокенов-1 И ОперацииПередКоторымиНеСтавимПробел.Свойство(ТаблицаТокенов[Индекс+1].Токен))) Тогда
			
			мЭтаСтрока = мЭтаСтрока + " ";
			
		КонецЕсли;
		
		Если ТокеныСтавимОтступ.Свойство(Токен.Токен) Тогда
			
			мОтступыСледующейСтроки = мОтступыСледующейСтроки  + 1;
			
		ИначеЕсли Токен.Токен = "ПраваяКруглаяСкобка" Тогда
			
			ц = Индекс-1;
			КоличествоПравыхКруглыхСкобок = 1;
			Пока Ц>=2 Цикл
								
				Если ТаблицаТокенов[ц].Токен = "ПраваяКруглаяСкобка" Тогда
					КоличествоПравыхКруглыхСкобок = КоличествоПравыхКруглыхСкобок + 1;
				ИначеЕсли ТаблицаТокенов[ц].Токен = "ЛеваяКруглаяСкобка" Тогда					
					КоличествоПравыхКруглыхСкобок = КоличествоПравыхКруглыхСкобок - 1;
				КонецЕсли;
				
				Если КоличествоПравыхКруглыхСкобок = 0 Тогда
					Прервать;
				КонецЕсли;
				
				ц = ц  - 1;				
				
			КонецЦикла;
			
			Если ТаблицаТокенов[ц-2].Токен = "Функция" ИЛИ ТаблицаТокенов[ц-2].Токен = "Процедура" Тогда
				мОтступыСледующейСтроки = мОтступыСледующейСтроки  + 1;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТокеныУбираемОтступ.Свойство(Токен.Токен) Тогда
			
			мОтступыЭтойСтроки = мОтступыЭтойСтроки - 1;
			мОтступыСледующейСтроки = мОтступыСледующейСтроки - 1;
			
		КонецЕсли;
		
		Если БлокиДополнительногоОтступа.Получить(Токен.Токен) <> Неопределено Тогда
			
			мСтекДополнительныхОтступов.Добавить(Токен.Токен);
			
		ИначеЕсли мСтекДополнительныхОтступов.Количество()=0 И Токен.Токен = "ЗнакРавно" Тогда
			
			мСтекДополнительныхОтступов.Добавить(Токен.Токен);
			
		КонецЕсли;
		
		Если мСтекДополнительныхОтступов.Количество() > 0 Тогда
			
			Если Токен.Токен = БлокиДополнительногоОтступа[мСтекДополнительныхОтступов[мСтекДополнительныхОтступов.Количество()-1]] 
				ИЛИ (Токен.Токен = "ТочкаСЗапятой" И мСтекДополнительныхОтступов[мСтекДополнительныхОтступов.Количество()-1] = "ЗнакРавно") Тогда
			
				мСтекДополнительныхОтступов.Удалить(мСтекДополнительныхОтступов.Количество()-1);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	ДобавитьВРезультат();
	
	Возврат СтрСоединить(Результат, Строка(Символы.ПС));
	
КонецФункции // Закрыть()

Процедура ДобавитьВРезультат()

	СтрокаДляДобавления = "";
	Если мПустыеСтрокиСОтступами ИЛИ НЕ ПустаяСтрока(мЭтаСтрока) Тогда
			
		Для ц = 1 По мОтступыЭтойСтроки Цикл 
			СтрокаДляДобавления = СтрокаДляДобавления + Строка(Символы.Таб);
		КонецЦикла;
		
	КонецЕсли;
	
	Результат.Добавить(СтрокаДляДобавления + СокрП(мЭтаСтрока)); 
	
	мЭтаСтрока = "";
	мОтступыЭтойСтроки = мОтступыСледующейСтроки;
	
КонецПроцедуры

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Возврат Подписки;
КонецФункции // Подписки()

мПустыеСтрокиСОтступами = Истина;
Результат = Новый Массив;